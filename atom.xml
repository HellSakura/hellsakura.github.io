<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>琉的小窝</title>
  
  
  <link href="https://hellsakura.github.io/atom.xml" rel="self"/>
  
  <link href="https://hellsakura.github.io/"/>
  <updated>2022-01-18T06:54:38.824Z</updated>
  <id>https://hellsakura.github.io/</id>
  
  <author>
    <name>琉</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>RSSHub及FreshRSS搭建踩坑</title>
    <link href="https://hellsakura.github.io/2022/01/14/rsshub-freshrss/"/>
    <id>https://hellsakura.github.io/2022/01/14/rsshub-freshrss/</id>
    <published>2022-01-13T18:31:08.000Z</published>
    <updated>2022-01-18T06:54:38.824Z</updated>
    
    <content type="html"><![CDATA[<p>RSSHub搭建，使用docker Compose  </p><span id="more"></span><p><a href="https://docs.rsshub.app/install/#docker-compose-bu-shu">官方文档</a></p><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><p>下载docker-compose.yml  </p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">wget https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;DIYgod&#x2F;RSSHub&#x2F;master&#x2F;docker-compose.yml<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>创建 volume 持久化 Redis 缓存  </p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">$ docker volume create redis-data<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>启动  </p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">$ docker-compose up -d&#96;&#96;&#96;  &lt;!--more--&gt;浏览器访问 &#96;ip:1200&#96; 看到以下界面即部署完成&gt;如果是本地部署，则访问&#96;localhost:1200&#96;![2016493769.png][2]### docker-compose配置文件  [配置文件文档][3]&#96;&#96;&#96;YML version: &#39;3&#39;services:    rsshub:        image: diygod&#x2F;rsshub        restart: always        ports:            - &#39;1200:1200&#39; #监听端口        environment:            NODE_ENV: production #是否显示错误输出（production 关闭输出）            CACHE_TYPE: redis #缓存类型            REDIS_URL: &#39;redis:&#x2F;&#x2F;redis:6379&#x2F;&#39; # Redis 连接地址            PUPPETEER_WS_ENDPOINT: &#39;ws:&#x2F;&#x2F;browserless:3000&#39; #用于 puppeteer.connect 的浏览器 websocket 链接        depends_on:            - redis            - browserless    browserless:        # See issue 6680        image: browserless&#x2F;chrome:1.43-chrome-stable        restart: always        ulimits:          core:            hard: 0            soft: 0    redis:        image: redis:alpine        restart: always        volumes:            - redis-data:&#x2F;datavolumes:    redis-data:<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><h2 id="FreshRSS搭建"><a href="#FreshRSS搭建" class="headerlink" title="FreshRSS搭建"></a>FreshRSS搭建</h2><h3 id="安装FreshRSS"><a href="#安装FreshRSS" class="headerlink" title="安装FreshRSS"></a>安装FreshRSS</h3><p> 在宝塔创建站点，选择数据库MySQL </p><p><img src="/images/2022-01-14/786969596.png" alt="786969596" loading="lazy">  </p><blockquote><p>Tips：可以第一行随意填写一个域名，第二行填写ip:ports，建站完成后在网站设置中删除第一行的域名。<br>这样可以实现单ip无域名建立多个网站，不浪费服务器资源  </p></blockquote><p> 前往<code>/www/wwwroot/</code>目录，打开刚刚创建网站根目录，删除根目录中宝塔默认创建的所有文件（<code>.user.ini</code>可忽略）<br>从<a href="https://www.freshrss.org/">FreshRSS官网</a>下载源码，并解压到根目录。 </p><p> 打开软件商店-PHP设置-禁用函数，找到<code>openlog</code>和<code>syslog</code>，点删除取消禁用<br>选择 安装扩展 ，安装<code>fileinfo</code>，耐心等待安装完成。<br><img src="/images/2022-01-14/2550650747.png" alt="2550650747.png" loading="lazy"></p><p> 访问创建网站时设置的域名或ip地址，即可进入FreshRSS安装程序。<br>根据网页提示设置用户名及密码，数据库地址填<code>localhost</code>本地数据库，数据库用户名、数据库名、数据库密码根据之前创建网站时的信息填写。 </p><h3 id="FreshRSS配置认证"><a href="#FreshRSS配置认证" class="headerlink" title="FreshRSS配置认证"></a>FreshRSS配置认证</h3><p><img src="/images/2022-01-14/3635047765.png" alt="3635047765.png" loading="lazy"><br>登陆后在右上角齿轮中打开设置，点击认证<br>勾选<br><img src="/images/2022-01-14/708798026.png" alt="708798026.png" loading="lazy">   </p><p>在左侧用户账户选项中，最下方的API管理中输入想要设定的api密码，点击钥匙图标保存并提交</p><p><img src="/images/2022-01-14/2344587124.png" alt="2344587124.png" loading="lazy">  </p><p>下方的地址即是用于手机端RSS应用的地址  </p><hr><h2 id="RSSHub-chrome插件"><a href="#RSSHub-chrome插件" class="headerlink" title="RSSHub chrome插件"></a>RSSHub chrome插件</h2><p>仓库地址<a href="https://github.com/DIYgod/RSSHub-Radar/">RssHub Radar</a> </p><p>安装后打开插件设置，将<code>自定义 RSSHub 域名</code>更改为你的RSSHub域名<br>在下方一键订阅中勾选<code>FreshRSS </code>，链接可在FreshRSS 设置-用户账户-认证口令下方找到<br><img src="/images/2022-01-14/2622813880.png" alt="2622813880.png" loading="lazy">  </p><p><img src="/images/2022-01-14/1061422794.png" alt="1061422794.png" loading="lazy">   </p><blockquote><p>注意，如果未配置https，请务必不要选择https，否则会出现下面的情况<img src="/images/2022-01-14/2873879450.png" alt="2873879450.png" loading="lazy"></p></blockquote><hr><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><p>你可以找到任何一个RSSHub所支持的网站<a href="https://docs.rsshub.app/social-media.html">支持路由列表</a><br>此时点击RssHub Radar插件，点击一键订阅，即可订阅当前网站</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;RSSHub搭建，使用docker Compose  &lt;/p&gt;</summary>
    
    
    
    <category term="linux" scheme="https://hellsakura.github.io/categories/linux/"/>
    
    
    <category term="RssHub" scheme="https://hellsakura.github.io/tags/RssHub/"/>
    
    <category term="FreshRss" scheme="https://hellsakura.github.io/tags/FreshRss/"/>
    
  </entry>
  
  <entry>
    <title>基于Arduino mini pro的蓝牙遥控小车制作（使用joystick控制）</title>
    <link href="https://hellsakura.github.io/2021/03/05/Arduino_car/"/>
    <id>https://hellsakura.github.io/2021/03/05/Arduino_car/</id>
    <published>2021-03-04T18:31:08.000Z</published>
    <updated>2021-03-30T09:31:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>蓝牙遥控小车,基于Arduino mini pro，使用摇杆控制</p><span id="more"></span><h1 id="1、所需工具及组件"><a href="#1、所需工具及组件" class="headerlink" title="1、所需工具及组件"></a>1、所需工具及组件</h1><h2 id="1-1工具列表"><a href="#1-1工具列表" class="headerlink" title="1.1工具列表"></a>1.1工具列表</h2><ol><li>电烙铁套装</li><li>热熔胶</li><li>万用表</li><li>尖嘴钳<h2 id="1-2组件列表"><a href="#1-2组件列表" class="headerlink" title="1.2组件列表"></a>1.2组件列表</h2><table><thead><tr><th>组件</th><th>型号</th><th align="center">数量</th><th>备注</th></tr></thead><tbody><tr><td>Ardunio mini pro</td><td>5V/16M</td><td align="center">2</td><td></td></tr><tr><td>L298N电机驱动模块</td><td></td><td align="center">1</td><td></td></tr><tr><td>带底板HC-05主从机一体蓝牙模块</td><td>HC05原装版</td><td align="center">2</td><td>原装和非原装都可</td></tr><tr><td>游戏摇杆控制杆传感器 JoyStick模块</td><td></td><td align="center">1</td><td></td></tr><tr><td>18650电池盒</td><td>2节带线</td><td align="center">1</td><td>可买3节装</td></tr><tr><td>18650锂电池 3.7V</td><td>2000-2100HAM</td><td align="center">2</td><td>建议买3节以得到11V电压</td></tr><tr><td>USB转TTL CH340G模块</td><td>CH340G</td><td align="center">1</td><td></td></tr><tr><td>M3单头 六角铜柱 螺柱</td><td>M3*20+6(10个）</td><td align="center">1</td><td></td></tr><tr><td>M3单头 六角铜柱 螺柱</td><td>平头螺丝M3*5(100个）</td><td align="center">1</td><td></td></tr><tr><td>M3单头 六角铜柱 螺柱</td><td>六角螺母M3 内径3MM(100个）</td><td align="center">1</td><td></td></tr><tr><td>杜邦线  一排40根</td><td>公对公（10CM)</td><td align="center">1</td><td></td></tr><tr><td>杜邦线  一排40根</td><td>公对母（10CM)</td><td align="center">1</td><td></td></tr><tr><td>杜邦线  一排40根</td><td>母对母（10CM)</td><td align="center">1</td><td></td></tr><tr><td>间距2.54MM单排排针  （20个）</td><td>1*40PIN</td><td align="center">1</td><td></td></tr><tr><td>Arduino MB102大面包板+电源模块</td><td></td><td align="center">1</td><td></td></tr><tr><td>洞洞板</td><td>7*9cm</td><td align="center">1</td><td></td></tr><tr><td>微型小船形开关</td><td>黑色2脚2档铜脚（5只）</td><td align="center">1</td><td></td></tr><tr><td>智能小车底盘 强磁电机</td><td></td><td align="center">1</td><td>两轮</td></tr><tr><td>小车底板</td><td></td><td align="center">1</td><td>圆形（当作上盖，盖住接线）</td></tr><tr><td>下方为购买后未用到的组件（目前未使用或使用中出现问题）</td><td></td><td align="center"></td><td></td></tr><tr><td>18650锂电池充电板</td><td>TYPE-C USB接口</td><td align="center">1</td><td></td></tr><tr><td>HC-SR04 超声波传感器</td><td></td><td align="center">1</td><td></td></tr><tr><td>3.7V转12V迷你DC-DC升压模块</td><td></td><td align="center">1</td><td>输出电流不达标</td></tr><tr><td>蜂鸣器</td><td>3-~12V无源通用电磁式16欧2kHz（5只）</td><td align="center">1</td><td></td></tr><tr><td>MT3608 2a升压板 DC-DC升压模块</td><td></td><td align="center">1</td><td></td></tr></tbody></table></li></ol><h2 id="1-3组件介绍"><a href="#1-3组件介绍" class="headerlink" title="1.3组件介绍"></a>1.3组件介绍</h2><h3 id="1-3-1-Ardunio-mini-pro"><a href="#1-3-1-Ardunio-mini-pro" class="headerlink" title="1.3.1 Ardunio mini pro"></a>1.3.1 Ardunio mini pro</h3><h4 id="特点"><a href="#特点" class="headerlink" title="特点"></a>特点</h4><ul><li><input checked="" disabled="" type="checkbox"> 体积小巧</li><li><input checked="" disabled="" type="checkbox"> IO齐全</li><li><input disabled="" type="checkbox"> 外部引脚通孔焊接（需自行焊接）</li><li><input disabled="" type="checkbox"> 直接下载程序（需自备USB转TTL串口线）<h4 id="示意图"><a href="#示意图" class="headerlink" title="示意图"></a>示意图</h4><img src="/images/2021/03/05/1.jpeg" alt="pro mini.jpg" loading="lazy"><br>买到的pro mini 应该是这种样子的，需要自行焊接</li></ul><h4 id="I-O图"><a href="#I-O图" class="headerlink" title="I/O图"></a>I/O图</h4><p><img src="/images/2021/03/05/2.png" alt="IO图.png" loading="lazy"><br><strong>串行：0（RX）和1（TX）</strong> 用于接收（RX）和发送（TX）TTL串行数据。<strong>（一定要将其他设备的RXD、TXD分别接在pro mini 的TXD、RXD接口上，即发送对接收）</strong>  </p><p><strong>PWM:</strong> 3、5、6、9、10和11。 提供带<a href="https://www.arduino.cc/en/Main/Reference/AnalogWrite">AnalogWrite</a> 功能的8位PWM输出。<br><strong>RAW</strong>用于为电路板提供原始电压<br><strong>VCC</strong>3.3V或5V电源<br><strong>GND</strong>接地引脚</p><div class="warning"><blockquote><p>注意：如果使用5V电源供电则接VCC GND ，7~9V电源 RAW GND</p></blockquote></div><blockquote><p>你也可以选用Ardunio uno等其他型号</p></blockquote><h3 id="1-3-2-L298N电机驱动模块"><a href="#1-3-2-L298N电机驱动模块" class="headerlink" title="1.3.2 L298N电机驱动模块"></a>1.3.2 L298N电机驱动模块</h3><h4 id="示意图-1"><a href="#示意图-1" class="headerlink" title="示意图"></a>示意图</h4><p><img src="/images/2021/03/05/3.jpeg" alt="L298N.jpg" loading="lazy"></p><h4 id="跳线帽使用说明"><a href="#跳线帽使用说明" class="headerlink" title="跳线帽使用说明"></a>跳线帽使用说明</h4><p>可以看到有3个跳线帽<br><strong>板载5V使能</strong>、<strong>通道A使能</strong>和<strong>通道B使能</strong><br>如果在<strong>12V供电</strong>处输入7~12V电压，可以安装上<strong>板载5V使能</strong>跳线帽，此时可以从<strong>5V供电</strong>处得到一个5V输出，可用于给pro mini 或其他组件供电。<br>当驱动电压高于12V,小于等于24V时，必须拔掉<strong>板载5V使能</strong>跳线帽，然后在<strong>5V供电</strong>端口外部接入5V电压对L298N内部逻辑电路供电，此时pro mini 等组件需外部单独供电。<br>可通过<strong>通道A使能</strong>及<strong>通道B使能</strong>这两个端口实现PWM调速（使用PWM调速时需取下跳线帽）</p><div class="warning"><blockquote><p>注意:L298N使用时需要与pro mini共地</p></blockquote></div><h3 id="1-3-3-HC-05蓝牙模块"><a href="#1-3-3-HC-05蓝牙模块" class="headerlink" title="1.3.3 HC-05蓝牙模块"></a>1.3.3 HC-05蓝牙模块</h3><p>网上售卖的分为兼容版和原装版两种，区别不是很大，我买的时候买了一个兼容板和原装板</p><h4 id="示意图-2"><a href="#示意图-2" class="headerlink" title="示意图"></a>示意图</h4><p><img src="/images/2021/03/05/4.jpeg" alt="HC-05兼容.jpg" loading="lazy"><br><img src="/images/2021/03/05/5.jpeg" alt="HC-05原装.jpg" loading="lazy"></p><h4 id="接线方法"><a href="#接线方法" class="headerlink" title="接线方法"></a>接线方法</h4><table><thead><tr><th>USB转TTL</th><th>HC-05</th></tr></thead><tbody><tr><td>TXD</td><td>RXD</td></tr><tr><td>RXD</td><td>TXD</td></tr><tr><td>GND</td><td>GND</td></tr><tr><td>5V</td><td>VCC</td></tr></tbody></table><p>注意：我这里兼容版是按照表格里的接线方法接线的，使用正常。使用原装版时，按照此方法电脑提示设备运转不正常，将USB转TTL的 VCC 对应了HC-05上的 VCC后，运作正常</p><h3 id="1-3-4-USB转TTL-CH340G模块"><a href="#1-3-4-USB转TTL-CH340G模块" class="headerlink" title="1.3.4 USB转TTL CH340G模块"></a>1.3.4 USB转TTL CH340G模块</h3><h4 id="示意图-3"><a href="#示意图-3" class="headerlink" title="示意图"></a>示意图</h4><p><img src="/images/2021/03/05/6.jpeg" alt="USB转TTL.jpg" loading="lazy"></p><h4 id="驱动"><a href="#驱动" class="headerlink" title="驱动"></a>驱动</h4><p><a href="https://www.yuque.com/attachments/yuque/0/2020/zip/1370978/1596600916222-522166a5-306e-45a3-9acb-4ebfe147a5c0.zip?_lake_card=%7B%22uid%22:%221596600915956-0%22,%22src%22:%22https://www.yuque.com/attachments/yuque/0/2020/zip/1370978/1596600916222-522166a5-306e-45a3-9acb-4ebfe147a5c0.zip%22,%22name%22:%22CH341SER.ZIP%22,%22size%22:202935,%22type%22:%22application/x-zip-compressed%22,%22ext%22:%22zip%22,%22progress%22:%7B%22percent%22:99%7D,%22status%22:%22done%22,%22percent%22:0,%22id%22:%22jwf2P%22,%22card%22:%22file%22%7D">CH341SER.ZIP</a></p><h3 id="1-3-5-JoyStick模块"><a href="#1-3-5-JoyStick模块" class="headerlink" title="1.3.5 JoyStick模块"></a>1.3.5 JoyStick模块</h3><h4 id="示意图-4"><a href="#示意图-4" class="headerlink" title="示意图"></a>示意图</h4><p><img src="/images/2021/03/05/7.jpeg" alt="joystick.jpg" loading="lazy"></p><h4 id="测试方法-X接A0-Y接A1"><a href="#测试方法-X接A0-Y接A1" class="headerlink" title="测试方法 (X接A0 Y接A1)"></a>测试方法 (X接A0 Y接A1)</h4><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">joyX</span> <span class="token expression">A0</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">joyY</span> <span class="token expression">A1</span></span><span class="token keyword">int</span> button<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">;</span><span class="token keyword">int</span> buttonState <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token keyword">int</span> buttonState1 <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token keyword">void</span> <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token function">pinMode</span><span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">,</span>OUTPUT<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token function">pinMode</span><span class="token punctuation">(</span>button<span class="token punctuation">,</span>INPUT<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token function">digitalWrite</span><span class="token punctuation">(</span>button<span class="token punctuation">,</span> HIGH<span class="token punctuation">)</span><span class="token punctuation">;</span>  Serial<span class="token punctuation">.</span><span class="token function">begin</span><span class="token punctuation">(</span><span class="token number">9600</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">void</span> <span class="token function">loop</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>  Serial<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token function">analogRead</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token comment">//读取摇杆Y轴的值，串口显示</span>  Serial<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">","</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  Serial<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token function">analogRead</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token comment">//读取摇杆X轴的值，串口显示</span>  Serial<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">","</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">delay</span><span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>打开串口监视器      可以看到随着摇杆的运动，数据在不断变换<br><img src="/images/2021/03/05/8.png" alt="image.png" loading="lazy"><br><img src="/images/2021/03/05/9.png" alt="image.png" loading="lazy"><br>默认的位置在 513,525 左右，这是中间位置（不同摇杆这个数值可能不同）。<br>其值介于0到1023之间</p><h3 id="1-3-6-小车底盘"><a href="#1-3-6-小车底盘" class="headerlink" title="1.3.6 小车底盘"></a>1.3.6 小车底盘</h3><p>将零件自行组装<br><img src="/images/2021/03/05/10.jpeg" alt="车1.jpg" loading="lazy"><br><img src="/images/2021/03/05/11.jpeg" alt="车2.jpg" loading="lazy"><br>请根据体感自行调整导柱长度，我的下方2个万向轮处给的8根导柱过长，导致小车不能直行，于是手动将其磨短了4mm左右。</p><h1 id="2、程序设计及写入"><a href="#2、程序设计及写入" class="headerlink" title="2、程序设计及写入"></a>2、程序设计及写入</h1><p>IDE的使用为Arduino官方的IDE，下载地址<a href="https://www.arduino.cc/en/Main/Software">https://www.arduino.cc/en/Main/Software</a></p><h2 id="2-1-遥控器程序"><a href="#2-1-遥控器程序" class="headerlink" title="2.1 遥控器程序"></a>2.1 遥控器程序</h2><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token keyword">int</span> xAxis<span class="token punctuation">,</span> yAxis<span class="token punctuation">;</span><span class="token keyword">void</span> <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  Serial<span class="token punctuation">.</span><span class="token function">begin</span><span class="token punctuation">(</span><span class="token number">38400</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//蓝牙模块的默认通讯速率</span><span class="token punctuation">&#125;</span><span class="token keyword">void</span> <span class="token function">loop</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  xAxis <span class="token operator">=</span> <span class="token function">analogRead</span><span class="token punctuation">(</span>A0<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//读取X轴数据</span>  yAxis <span class="token operator">=</span> <span class="token function">analogRead</span><span class="token punctuation">(</span>A1<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//读取Y轴数据</span>    <span class="token comment">//通过串口发送到从属HC-05蓝牙模块</span>  Serial<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>xAxis<span class="token operator">/</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//除以4以将数值从0-1023转换为0-256 （1字节）</span>  Serial<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>yAxis<span class="token operator">/</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token function">delay</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>通过将操纵杆X、Y轴的数值除以4，可以将其从0-1023转换为0-255之间的值，就可以通过蓝牙设备将其作为1个字节发送，这样易于从属设备接收。</p><h2 id="2-2-小车控制程序"><a href="#2-2-小车控制程序" class="headerlink" title="2.2 小车控制程序"></a>2.2 小车控制程序</h2><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">enA</span> <span class="token expression"><span class="token number">10</span></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">in1</span> <span class="token expression"><span class="token number">3</span></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">in2</span> <span class="token expression"><span class="token number">5</span></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">enB</span> <span class="token expression"><span class="token number">11</span></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">in3</span> <span class="token expression"><span class="token number">6</span></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">in4</span> <span class="token expression"><span class="token number">9</span></span></span><span class="token keyword">int</span> xAxis<span class="token punctuation">,</span> yAxis<span class="token punctuation">;</span><span class="token keyword">unsigned</span> <span class="token keyword">int</span>  x <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token keyword">unsigned</span> <span class="token keyword">int</span>  y <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token keyword">int</span> motorSpeedA <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token keyword">int</span> motorSpeedB <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token keyword">void</span> <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token function">pinMode</span><span class="token punctuation">(</span>enA<span class="token punctuation">,</span> OUTPUT<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token function">pinMode</span><span class="token punctuation">(</span>enB<span class="token punctuation">,</span> OUTPUT<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token function">pinMode</span><span class="token punctuation">(</span>in1<span class="token punctuation">,</span> OUTPUT<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token function">pinMode</span><span class="token punctuation">(</span>in2<span class="token punctuation">,</span> OUTPUT<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token function">pinMode</span><span class="token punctuation">(</span>in3<span class="token punctuation">,</span> OUTPUT<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token function">pinMode</span><span class="token punctuation">(</span>in4<span class="token punctuation">,</span> OUTPUT<span class="token punctuation">)</span><span class="token punctuation">;</span>  Serial<span class="token punctuation">.</span><span class="token function">begin</span><span class="token punctuation">(</span><span class="token number">38400</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//蓝牙模块的默认通讯速率</span><span class="token punctuation">&#125;</span><span class="token keyword">void</span> <span class="token function">loop</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token comment">//默认值,摇杆在中心位置时不移动,依据前面摇杆测试自行填写,摇杆之间可能会有所不同</span>  x <span class="token operator">=</span> <span class="token number">513</span> <span class="token operator">/</span> <span class="token number">4</span><span class="token punctuation">;</span>  y <span class="token operator">=</span> <span class="token number">525</span> <span class="token operator">/</span> <span class="token number">4</span><span class="token punctuation">;</span>  <span class="token comment">//从蓝牙主设备读取数据,串行接收到2个字节的数据,即X轴、Y轴,使用 Serial.read 函数读取</span>  <span class="token keyword">while</span> <span class="token punctuation">(</span>Serial<span class="token punctuation">.</span><span class="token function">available</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">>=</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>     x <span class="token operator">=</span> Serial<span class="token punctuation">.</span><span class="token function">read</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">delay</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    y <span class="token operator">=</span> Serial<span class="token punctuation">.</span><span class="token function">read</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span>  <span class="token function">delay</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">//将接收到的值从0-255转换成0-1023</span>  xAxis <span class="token operator">=</span> x<span class="token operator">*</span><span class="token number">4</span><span class="token punctuation">;</span>  yAxis <span class="token operator">=</span> y<span class="token operator">*</span><span class="token number">4</span><span class="token punctuation">;</span>      <span class="token comment">//增加一点公差,并将470到550的值视为中心.如果向后移动摇杆的Y轴并且该值低于470,那么将两个电动机的旋转方向设置为向后,否则向前</span>  <span class="token comment">//Y轴用于前进及后退</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>yAxis <span class="token operator">&lt;</span> <span class="token number">470</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token comment">//马达A前进</span>    <span class="token function">digitalWrite</span><span class="token punctuation">(</span>in1<span class="token punctuation">,</span> HIGH<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">//此处的 LOW 和 HIGH 请根据你的马达接线方式自行调整</span>    <span class="token function">digitalWrite</span><span class="token punctuation">(</span>in2<span class="token punctuation">,</span> LOW<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//马达B前进</span>    <span class="token function">digitalWrite</span><span class="token punctuation">(</span>in3<span class="token punctuation">,</span> HIGH<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">digitalWrite</span><span class="token punctuation">(</span>in4<span class="token punctuation">,</span> LOW<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//将Y轴的下降值从470转换为0,将PWM值从0转换为255,即电动机的速度</span>    motorSpeedA <span class="token operator">=</span> <span class="token function">map</span><span class="token punctuation">(</span>yAxis<span class="token punctuation">,</span> <span class="token number">470</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    motorSpeedB <span class="token operator">=</span> <span class="token function">map</span><span class="token punctuation">(</span>yAxis<span class="token punctuation">,</span> <span class="token number">470</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span>  <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>yAxis <span class="token operator">></span> <span class="token number">550</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token comment">//马达A后退</span>    <span class="token function">digitalWrite</span><span class="token punctuation">(</span>in1<span class="token punctuation">,</span> LOW<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">digitalWrite</span><span class="token punctuation">(</span>in2<span class="token punctuation">,</span> HIGH<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//马达B后退</span>    <span class="token function">digitalWrite</span><span class="token punctuation">(</span>in3<span class="token punctuation">,</span> LOW<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">digitalWrite</span><span class="token punctuation">(</span>in4<span class="token punctuation">,</span> HIGH<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//将Y轴的上升值从550转换为1023,将PWM值从0转换为255,即电动机的速度</span>    motorSpeedA <span class="token operator">=</span> <span class="token function">map</span><span class="token punctuation">(</span>yAxis<span class="token punctuation">,</span> <span class="token number">550</span><span class="token punctuation">,</span> <span class="token number">1023</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    motorSpeedB <span class="token operator">=</span> <span class="token function">map</span><span class="token punctuation">(</span>yAxis<span class="token punctuation">,</span> <span class="token number">550</span><span class="token punctuation">,</span> <span class="token number">1023</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span>  <span class="token comment">//如果摇杆在中心,则速度为0</span>  <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>    motorSpeedA <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>    motorSpeedB <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span>  <span class="token comment">//X轴用于左转及右转</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>xAxis <span class="token operator">&lt;</span> <span class="token number">470</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token comment">//将X轴的下降值从470转换为0,将PWM值从0转换为255</span>    <span class="token keyword">int</span> xMapped <span class="token operator">=</span> <span class="token function">map</span><span class="token punctuation">(</span>xAxis<span class="token punctuation">,</span> <span class="token number">470</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//左转：降低左马达速度,增大右马达速度</span>    motorSpeedB <span class="token operator">=</span> motorSpeedA <span class="token operator">+</span> xMapped<span class="token punctuation">;</span>    motorSpeedA <span class="token operator">=</span> motorSpeedB <span class="token operator">-</span> xMapped<span class="token punctuation">;</span>    <span class="token comment">//将速度限制在0-255之间</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>motorSpeedA <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      motorSpeedA <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>motorSpeedB <span class="token operator">></span> <span class="token number">255</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      motorSpeedB <span class="token operator">=</span> <span class="token number">255</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>xAxis <span class="token operator">></span> <span class="token number">550</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token comment">//将X轴的上升值从550转换为1023,将PWM值从0转换为255</span>    <span class="token keyword">int</span> xMapped <span class="token operator">=</span> <span class="token function">map</span><span class="token punctuation">(</span>xAxis<span class="token punctuation">,</span> <span class="token number">550</span><span class="token punctuation">,</span> <span class="token number">1023</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//右转：降低右马达速度,增大左马达速度</span>    motorSpeedB <span class="token operator">=</span> motorSpeedA <span class="token operator">-</span> xMapped<span class="token punctuation">;</span>    motorSpeedA <span class="token operator">=</span> motorSpeedB <span class="token operator">+</span> xMapped<span class="token punctuation">;</span>    <span class="token comment">//将速度限制在0-255之间</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>motorSpeedA <span class="token operator">></span> <span class="token number">255</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      motorSpeedA <span class="token operator">=</span> <span class="token number">255</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>motorSpeedB <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      motorSpeedB <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span>  <span class="token comment">//根据施加的电压和电动机本身,在较低速度下,电动机将无法开始运行,并且会产生嗡嗡声,此处实际上是将速度限制在了75-255之间</span>  <span class="token comment">//PWM信号的值低于75，电动机将无法运动（可自行根据马达和电压不同调整）</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>motorSpeedA <span class="token operator">&lt;</span> <span class="token number">75</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    motorSpeedA <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>motorSpeedB <span class="token operator">&lt;</span> <span class="token number">75</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    motorSpeedB <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span>  <span class="token function">analogWrite</span><span class="token punctuation">(</span>enA<span class="token punctuation">,</span> motorSpeedA<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//向马达A发送PWM信号</span>  <span class="token function">analogWrite</span><span class="token punctuation">(</span>enB<span class="token punctuation">,</span> motorSpeedB<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//向马达B发送PWM信号</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="2-3蓝牙模块的设置及配对"><a href="#2-3蓝牙模块的设置及配对" class="headerlink" title="2.3蓝牙模块的设置及配对"></a>2.3蓝牙模块的设置及配对</h2><p>目前我们手里有两个HC-05蓝牙模块，我们需要将其中一个设置为主机，另一个设置为从机，来实现摇杆操控，为了实现这一点，我们需要在AT模式下使用AT命令。<br>在购买HC-05蓝牙模块时，卖家应该会发给你关于HC-05蓝牙模块的使用说明和蓝牙测试软件，如果没有，我这里有提供的材料<br><a href="https://www.yuque.com/attachments/yuque/0/2020/zip/1370978/1596595432493-03932491-976e-40f1-b40e-1f4fcd6ef151.zip?_lake_card=%7B%22uid%22:%221596595428917-0%22,%22src%22:%22https://www.yuque.com/attachments/yuque/0/2020/zip/1370978/1596595432493-03932491-976e-40f1-b40e-1f4fcd6ef151.zip%22,%22name%22:%22%E9%A9%B1%E5%8A%A8%E5%8F%8A%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7.zip%22,%22size%22:4525096,%22type%22:%22application/x-zip-compressed%22,%22ext%22:%22zip%22,%22progress%22:%7B%22percent%22:99%7D,%22status%22:%22done%22,%22percent%22:0,%22id%22:%22qoqha%22,%22card%22:%22file%22%7D">驱动及测试工具.zip</a></p><ol><li>安装HC-05的驱动</li><li>将蓝牙模块按照<a href="#3%E3%80%81%E7%94%B5%E8%B7%AF%E8%BF%9E%E6%8E%A5">接线图</a>与USB转TTL连接（<a href="#%E9%A9%B1%E5%8A%A8">USB转TTL驱动</a>）</li><li>按住蓝牙模块上的小按钮，连接电脑，如果蓝牙模块指示灯大约每2秒闪烁一次，则表明我们已成功进入AT命令模式</li><li>打开蓝牙测试软件，点击搜索端口，波特率38400，稍等一会就会显示端口（这里的端口可以在设备管理器查看，选择CH340对应的端口）<img src="/images/2021/03/05/12.png" alt="image.png" loading="lazy"></li><li>输入 AT 后敲一下回车，再点击发送命令，会回复 OK 代表我们已经在AT模式下了</li></ol><p><img src="/images/2021/03/05/13.png" alt="image.png" loading="lazy"></p><ol start="6"><li>首先，我们需要将两个蓝牙模块的串口波特率更改为38400，出厂时自带应该是9600，然后记下你要作为从机的蓝牙模块的地址</li></ol><p>HC-05蓝牙模块出厂默认就是从机模式，配对码为1234（配对码可自行更改，但要确保主机和从机一致，指令集在上方附件中有提供），在此处，我们只需要将其中一个改为主机模式，然后通过绑定地址的方式让主机自动连接到从机。<br><em>以下为从机配置示例</em></p><pre class="line-numbers language-c" data-language="c"><code class="language-c">ATOKAT<span class="token operator">+</span>UART<span class="token operator">?</span>  <span class="token operator">+</span>UART<span class="token operator">:</span><span class="token number">9600</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span>             <span class="token comment">//表示当前波特率为9600</span>OKAT<span class="token operator">+</span>UART<span class="token operator">=</span><span class="token number">38400</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span>\r\n     <span class="token comment">//这里是兼容版的蓝牙模块,需要输入 \r\n 对于原装版的蓝牙模块不需要输入,直接输入 AT+UART=38400,0,0, 即可</span>OKAT<span class="token operator">+</span>UART<span class="token operator">?</span><span class="token operator">+</span>UART<span class="token operator">:</span><span class="token number">38400</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span>OKAT<span class="token operator">+</span>ROLE<span class="token operator">?</span>                   <span class="token comment">//表示蓝牙模块处于从机模式</span><span class="token operator">+</span>ROLE<span class="token operator">:</span><span class="token number">0</span>OKAT<span class="token operator">+</span>ADDR<span class="token operator">?</span><span class="token operator">+</span>ADDR<span class="token operator">:</span><span class="token number">98</span>d3<span class="token operator">:</span><span class="token number">71</span><span class="token operator">:</span>fdde39       <span class="token comment">//记下这个地址</span>OK<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>_以下为主机_配置示例</p><pre class="line-numbers language-c" data-language="c"><code class="language-c">ATOKAT<span class="token operator">+</span>UART<span class="token operator">?</span>  <span class="token operator">+</span>UART<span class="token operator">:</span><span class="token number">9600</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span>OKAT<span class="token operator">+</span>UART<span class="token operator">=</span><span class="token number">38400</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span>OKAT<span class="token operator">+</span>UART<span class="token operator">?</span><span class="token operator">+</span>UART<span class="token operator">:</span><span class="token number">38400</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span>OKAT<span class="token operator">+</span>ROLE<span class="token operator">?</span><span class="token operator">+</span>ROLE<span class="token operator">:</span><span class="token number">0</span>OKAT<span class="token operator">+</span>ROLE<span class="token operator">=</span><span class="token number">1</span>       <span class="token comment">//设置为主机模式</span>OKAT<span class="token operator">+</span>CMODE<span class="token operator">=</span><span class="token number">0</span>      <span class="token comment">//设置为固定地址连接模式</span>OKAT<span class="token operator">+</span>BIND<span class="token operator">=</span><span class="token number">98</span>d3<span class="token punctuation">,</span><span class="token number">71</span><span class="token punctuation">,</span>fdde39    <span class="token comment">//绑定之前的蓝牙地址,注意,在填写地址时,我们需要使用逗号而不是冒号</span>OK<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这样，蓝牙模块的设置就完成了，断电后重新上电，两块蓝牙模块会自动配对连接</p><blockquote><p>其他指令及详细说明请参阅上方附件中的HC-05指令集文档</p></blockquote><h2 id="2-4-程序写入"><a href="#2-4-程序写入" class="headerlink" title="2.4 程序写入"></a>2.4 程序写入</h2><ol><li><p>将USB转TTL与 mini pro 连接（连接mini pro只有6个排针那一侧的接口）</p><table><thead><tr><th>USB转TTL</th><th>mini pro</th></tr></thead><tbody><tr><td>RXD</td><td>TXD</td></tr><tr><td>TXD</td><td>RXD</td></tr><tr><td>GND</td><td>GND</td></tr><tr><td>VCC</td><td>VCC</td></tr></tbody></table></li><li><p>打开arduino的IDE，将上方程序填入，在工具栏中，选择 Arduino Pro or Pro mini，选择处理器，比如我买的这一块是5V/16M，选择端口，对应端口为CH340的端口，可以在设备管理器找到</p></li><li><p>点击上传按钮，在下方状态栏从编译项目变成上传中，马上按下pro mini 上的红色复位键，这里要多次尝试确认时机，就会提示上传完成，这时程序就写入了pro mini 中了</p></li><li><p>依次将小车和遥控器程序分别上传到两块pro mini 中</p></li></ol><p><img src="/images/2021/03/05/14.png" alt="image.png" loading="lazy"><br><img src="/images/2021/03/05/15.png" alt="image.png" loading="lazy"><br><img src="/images/2021/03/05/16.png" alt="image.png" loading="lazy"></p><h1 id="3、电路连接"><a href="#3、电路连接" class="headerlink" title="3、电路连接"></a>3、电路连接</h1><h2 id="3-1小车接线图"><a href="#3-1小车接线图" class="headerlink" title="3.1小车接线图"></a>3.1小车接线图</h2><p><img src="/images/2021/03/05/17.png" alt="小车接线图.png" loading="lazy"></p><p><a href="https://www.yuque.com/attachments/yuque/0/2020/pdf/1370978/1596544534776-77141d11-35e4-4068-bfbe-ab23bfdbb2ee.pdf?_lake_card=%7B%22uid%22:%221596544532721-0%22,%22src%22:%22https://www.yuque.com/attachments/yuque/0/2020/pdf/1370978/1596544534776-77141d11-35e4-4068-bfbe-ab23bfdbb2ee.pdf%22,%22name%22:%22%E5%B0%8F%E8%BD%A6%E6%8E%A5%E7%BA%BF%E5%9B%BE.pdf%22,%22size%22:713888,%22type%22:%22application/pdf%22,%22ext%22:%22pdf%22,%22progress%22:%7B%22percent%22:99%7D,%22status%22:%22done%22,%22percent%22:0,%22id%22:%225o3vh%22,%22card%22:%22file%22%7D">小车接线图.pdf</a></p><h2 id="3-2遥控器接线图"><a href="#3-2遥控器接线图" class="headerlink" title="3.2遥控器接线图"></a>3.2遥控器接线图</h2><p><img src="/images/2021/03/05/18.png" alt="遥控器_bb.png" loading="lazy"><br><a href="https://www.yuque.com/attachments/yuque/0/2020/pdf/1370978/1596551583499-d7d64699-e098-404c-9f61-39b76eb2ad17.pdf?_lake_card=%7B%22uid%22:%221596551581102-0%22,%22src%22:%22https://www.yuque.com/attachments/yuque/0/2020/pdf/1370978/1596551583499-d7d64699-e098-404c-9f61-39b76eb2ad17.pdf%22,%22name%22:%22%E9%81%A5%E6%8E%A7%E5%99%A8.pdf%22,%22size%22:837468,%22type%22:%22application/pdf%22,%22ext%22:%22pdf%22,%22progress%22:%7B%22percent%22:99%7D,%22status%22:%22done%22,%22percent%22:0,%22id%22:%22ewMJs%22,%22card%22:%22file%22%7D">遥控器.pdf</a></p><h1 id="4、安装"><a href="#4、安装" class="headerlink" title="4、安装"></a>4、安装</h1><p><img src="/images/2021/03/05/19.jpeg" alt="成品1.jpg" loading="lazy"><br><img src="/images/2021/03/05/20.jpeg" alt="成品2.jpg" loading="lazy"></p><div class="info"><blockquote><p>实际中，我这里马达out3 和out4 接线交换了一下，即out3为黑线 out4 为橙线，若出现左右转相反请自行修改代码</p></blockquote></div><h1 id="5、总结"><a href="#5、总结" class="headerlink" title="5、总结"></a>5、总结</h1><p>本来是打算全都用洞洞板连接，结果实际操作时发现不太好设计，于是就只是做了一个固定作用。其实可以不用洞洞板，只需要使用热熔胶固定即可，<br>图片左下方的是充电模块，因为一开始设计的时候，是打算两个电池并联，通过充电模块，再通过升压模块来给小车提供电源，但是实际使用时发现 <code>3.7V转12V迷你DC-DC升压模块</code> 出现问题，无法提供足量的电流，导致启动正常，电机运动会立刻断电<br>左侧的HC-SR04超声波模块 因为是发现升压模块出问题后重新修改的代码，并没有将其加入。<br>下方的是电源供给，将排针固定在了一小块洞洞板上，下方焊接在一起，接入电源的正负极即可。</p><p>至于遥控器，因为我没有找到合适的盒子来放置摇杆，目前是在面包板上使用，只是一个原型。</p><h1 id="Todo"><a href="#Todo" class="headerlink" title="Todo"></a>Todo</h1><ul><li><input checked="" disabled="" type="checkbox"> 摇杆外壳</li><li><input disabled="" type="checkbox"> OLED屏幕显示</li><li><input disabled="" type="checkbox"> 更好的充电方式</li><li><input disabled="" type="checkbox"> 全自动避障模式</li><li><input disabled="" type="checkbox"> 声音控制</li></ul>]]></content>
    
    
    <summary type="html">&lt;p&gt;蓝牙遥控小车,基于Arduino mini pro，使用摇杆控制&lt;/p&gt;</summary>
    
    
    
    <category term="Arduino" scheme="https://hellsakura.github.io/categories/Arduino/"/>
    
    
    <category term="Arduino" scheme="https://hellsakura.github.io/tags/Arduino/"/>
    
  </entry>
  
  <entry>
    <title>CentOS7中nodejs的安装</title>
    <link href="https://hellsakura.github.io/2020/02/04/nodejs-install-centos7/"/>
    <id>https://hellsakura.github.io/2020/02/04/nodejs-install-centos7/</id>
    <published>2020-02-03T18:31:08.000Z</published>
    <updated>2020-04-30T09:31:00.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>若使用 yum install nodejs npm -y 安装，安装后的 nodejs 版本为 6.17.1，版本低，部分应用运行会报错。</p></blockquote><span id="more"></span><p>如果已经使用<code>yum install nodejs npm -y</code>安装，则需要先卸载当前 nodejs</p><p><a href="#1-%E5%8D%B8%E8%BD%BD%E5%BD%93%E5%89%8Dnodejs" title="1.卸载当前nodejs"></a>1. 卸载当前 nodejs</p><hr><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">yum remove nodejs npm -y<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><a href="#2-%E5%88%A0%E9%99%A4%E4%B8%8B%E9%9D%A2%E7%9B%AE%E5%BD%95%E4%B8%8Bnode%E7%9B%B8%E5%85%B3%E5%86%85%E5%AE%B9" title="2.删除下面目录下node相关内容"></a>2. 删除下面目录下 node 相关内容</p><hr><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">&#x2F;usr&#x2F;local&#x2F;lib&#x2F;usr&#x2F;local&#x2F;include&#x2F;usr&#x2F;local&#x2F;bin<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><a href="#3-%E4%B8%8B%E8%BD%BDnodejs" title="3.下载nodejs"></a>3. 下载 nodejs</p><hr><p>目前官网最新的 nodejs 为 12.14.1</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">wget https:&#x2F;&#x2F;nodejs.org&#x2F;dist&#x2F;v12.14.1&#x2F;node-v12.14.1-linux-x64.tar.xz<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><a href="#4-%E8%A7%A3%E5%8E%8B" title="4.解压"></a>4. 解压</p><hr><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">xz -d node-v12.14.1-linux-x64.tar.xztar -xf node-v12.14.1-linux-x64.tar<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p><a href="#5-%E7%A1%AE%E8%AE%A4nodejs%E7%9A%84%E8%B7%AF%E5%BE%84" title="5.确认nodejs的路径"></a>5. 确认 nodejs 的路径</p><hr><p>上述下载位置为<code>~/node-v12.14.1-linux-x64</code></p><p><a href="#6-%E5%88%9B%E5%BB%BA%E8%BD%AF%E9%93%BE%E6%8E%A5" title="6.创建软链接"></a>6. 创建软链接</p><hr><p>⚠️必须给全路径</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">ln -s ~&#x2F;node-12.14.1-linux-x64&#x2F;bin&#x2F;node &#x2F;usr&#x2F;bin&#x2F;nodeln -s ~&#x2F;node-v12.14.1-linux-x64&#x2F;bin&#x2F;npm &#x2F;usr&#x2F;bin&#x2F;npm<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p><a href="#7-%E6%B5%8B%E8%AF%95nodejs%E5%AE%89%E8%A3%85" title="7.测试nodejs安装"></a>7. 测试 nodejs 安装</p><hr><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">node -vnpm -v<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>正确输出版本号则安装完毕</p>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;若使用 yum install nodejs npm -y 安装，安装后的 nodejs 版本为 6.17.1，版本低，部分应用运行会报错。&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="linux" scheme="https://hellsakura.github.io/categories/linux/"/>
    
    
    <category term="nodejs" scheme="https://hellsakura.github.io/tags/nodejs/"/>
    
    <category term="centos7" scheme="https://hellsakura.github.io/tags/centos7/"/>
    
  </entry>
  
  <entry>
    <title>Crawlab爬虫Docker部署流程</title>
    <link href="https://hellsakura.github.io/2020/02/04/crawlab-docker/"/>
    <id>https://hellsakura.github.io/2020/02/04/crawlab-docker/</id>
    <published>2020-02-03T17:31:08.000Z</published>
    <updated>2020-04-30T08:31:00.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>系统版本：CentOS 7.4 本文的系统命令都是在 root 账号下执行的，假如非 root 账号执行，提示没有权限，可在命令前加 sudo</p></blockquote><p>系统版本：CentOS 7.4</p><p>本文的系统命令都是在 root 账号下执行的，假如非 root 账号执行，提示没有权限，可在命令前加<code>sudo</code></p><span id="more"></span><h2 id="一、更换-yum-源"><a href="#一、更换-yum-源" class="headerlink" title="一、更换 yum 源"></a><a href="#%E4%B8%80%E3%80%81%E6%9B%B4%E6%8D%A2yum%E6%BA%90" title="一、更换yum源"></a>一、更换 yum 源</h2><ol><li>备份当前源</li></ol><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">cd &#x2F;etc&#x2F;yum.repos.d&#x2F;cp &#x2F;CentOS-Base.repo &#x2F;CentOS-Base-repo.bak<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><ol start="2"><li>下载阿里源 repo 文件</li></ol><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">wget http:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;repo&#x2F;Centos-7.repo<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ol start="3"><li>清理旧包</li></ol><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">yum clean all<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ol start="4"><li>将阿里源设置为默认源</li></ol><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">mv Centos-7.repo CentOS-Base.repo<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ol start="5"><li>生成阿里源缓存，更新 yum 源</li></ol><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">yum makecacheyum update<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="二、安装-docker"><a href="#二、安装-docker" class="headerlink" title="二、安装 docker"></a><a href="#%E4%BA%8C%E3%80%81%E5%AE%89%E8%A3%85docker" title="二、安装docker"></a>二、安装 docker</h2><ol><li>安装所需软件包 yum-util</li></ol><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">yum -y install yum-utils<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ol start="2"><li>设置 yum 源</li></ol><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">yum-config-manager --add-repo https:&#x2F;&#x2F;download.docker.com&#x2F;linux&#x2F;centos&#x2F;docker-ce.repo<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ol start="3"><li>列出仓库中 docker 版本</li></ol><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">yum list docker-ce  --showduplicates |sort -r<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/images/2020-02-04/1580793806750.jpg" loading="lazy"><br>4. 安装指定版本, 当前 centos 可用为 18.03.1.ce-1.el7.centos</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">yum install docker-ce-18.03.1.ce-1.el7.centos<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>中途会有二次确认，按 Y 即可<br><img src="/images/2020-02-04/1580794235441.jpg" loading="lazy"><br>安装完成后输入<code>docker version</code>可查看当前版本<br><img src="/images/2020-02-04/1580794385803.jpg" loading="lazy"></p><h2 id="三、安装-python3"><a href="#三、安装-python3" class="headerlink" title="三、安装 python3"></a><a href="#%E4%B8%89%E3%80%81%E5%AE%89%E8%A3%85python3" title="三、安装python3"></a>三、安装 python3</h2><p>CentOS 7 自带 python 版本为 python2.7<br><img src="/images/2020-02-04/1580794502393.jpg" loading="lazy">  </p><ol><li>安装依赖包</li></ol><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">yum -y groupinstall &quot;Development tools&quot;yum -y install zlib-devel bzip2-devel openssl-devel ncurses-devel sqlite-devel readline-devel tk-devel gdbm-devel db4-devel libpcap-devel xz-devel<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>python3.7 以上版本，需要额外安装</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">yum install libffi-devel -y<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ol start="2"><li>下载 Python3 安装包 (当前为 3.7.6)</li></ol><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">wget https:&#x2F;&#x2F;www.python.org&#x2F;ftp&#x2F;python&#x2F;3.7.6&#x2F;Python-3.7.6.tar.xz<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ol start="3"><li>新建 python3 存放目录</li></ol><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">mkdir &#x2F;usr&#x2F;local&#x2F;python3<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ol start="4"><li>安装 Python3</li></ol><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">tar -xvJf  Python-3.7.6.tar.xzcd Python-3.7.6.&#x2F;configure --prefix&#x3D;&#x2F;usr&#x2F;local&#x2F;python3make &amp;&amp; make install<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><ol start="5"><li>创建软链接</li></ol><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">ln -s &#x2F;usr&#x2F;local&#x2F;python3&#x2F;bin&#x2F;python3 &#x2F;usr&#x2F;bin&#x2F;python3ln -s &#x2F;usr&#x2F;local&#x2F;python3&#x2F;bin&#x2F;pip3 &#x2F;usr&#x2F;bin&#x2F;pip3<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><ol start="6"><li>查看 python 版本<br><code>python3</code><br><img src="/images/2020-02-04/1580795985639.jpg" loading="lazy"></li></ol><h2 id="三、Crawlab-的安装"><a href="#三、Crawlab-的安装" class="headerlink" title="三、Crawlab 的安装"></a><a href="#%E4%B8%89%E3%80%81Crawlab%E7%9A%84%E5%AE%89%E8%A3%85" title="三、Crawlab的安装"></a>三、Crawlab 的安装</h2><ol><li>更新 yum</li></ol><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">yum update<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ol start="2"><li>配置 docker 镜像源，提升速度<br>创建 /etc/docker/daemon.json</li></ol><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">vi &#x2F;etc&#x2F;docker&#x2F;daemon.json<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>按<code>i</code>开启编辑模式，在其中输入如下内容  </p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">&#123;&quot;registry-mirrors&quot;: [&quot;https:&#x2F;&#x2F;registry.docker-cn.com&quot;]&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><code>:wq</code>保存退出<br>如果保存出错<code>&quot;/etc/docker/daemon.json&quot; E212: Can&#39;t open file for writing</code><br>那么手动创建<code>docker</code>文件夹后再创建<code>daemon.json</code>文件</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">cd &#x2F;etcmkdir dockercd &#x2F;etc&#x2F;dockervim daemon.json<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><ol start="3"><li>下载 Crawlab 镜像<br>启动 docker</li></ol><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">systemctl start docker<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>下载镜像</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">docker pull tikazyq&#x2F;crawlab:latest<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/images/2020-02-04/1580801321843.jpg" loading="lazy"><br>4. 安装 docker-compose<br>下载 Docker Compose 的当前稳定版本</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">curl -L &quot;https:&#x2F;&#x2F;github.com&#x2F;docker&#x2F;compose&#x2F;releases&#x2F;download&#x2F;1.25.3&#x2F;docker-compose-$(uname -s)-$(uname -m)&quot; -o &#x2F;usr&#x2F;local&#x2F;bin&#x2F;docker-compose<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>将可执行权限应用于二进制文件</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">chmod +x &#x2F;usr&#x2F;local&#x2F;bin&#x2F;docker-compose<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>测试安装</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">docker-compose --version<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/images/2020-02-04/1580803627759.jpg" loading="lazy"><br>5. 查找 docker-compose.yml 文件位置</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">find &#x2F; -name &quot;docker-compose.yml*&quot;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/images/2020-02-04/1580803721033.jpg" loading="lazy"></p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">cd &#x2F;var&#x2F;lib&#x2F;docker&#x2F;overlay2&#x2F;XXXX&#x2F;diff&#x2F;app&#x2F;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>此处<code>XXXX</code>替换为你的路径<br>6. 配置 docker-compose.yml 文件<br>参考<a href="https://docs.crawlab.cn/Installation/Docker.html">官方文档</a><br>7. 启动 Crawlab</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">docker-compose up -d   #默认为守护进程模式，容器以后台方式运行<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>第一次启动会下载安装数据库 Redis 和 Mongodb<br><img src="/images/2020-02-04/1580806111415.jpg" loading="lazy"><br>8. 访问 Crawlab<br>在浏览器中输入 <code>http://你的ip:8080</code>即可看到 Crawlab 界面<br>⚠️在服务器防火墙放行 8080 端口<br><img src="/images/2020-02-04/1580808975234.jpg" loading="lazy"><br>9. 再启动<br>更新后</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"># 关闭并删除 Docker 容器docker-compose down# 拉取最新镜像docker pull tikazyq&#x2F;crawlab:latest# 启动 Docker 容器docker-compose up -d<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>重启后<br>查找 docker-compose.yml 文件位置<br>cd 到 docker-compose.yml 所在文件目录下<br>启动</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">docker-compose up -d<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>参考文档：<br>1.<a href="https://blog.csdn.net/kai402458953/article/details/100035672">https://blog.csdn.net/kai402458953/article/details/100035672</a><br>2.<a href="https://blog.csdn.net/kai402458953/article/details/100026109">https://blog.csdn.net/kai402458953/article/details/100026109</a><br>3.<a href="https://www.zhihu.com/question/277141716">https://www.zhihu.com/question/277141716</a><br>官方文档:<br><a href="https://docs.crawlab.cn/Installation/Docker.html">https://docs.crawlab.cn/Installation/Docker.html</a><br>项目地址：<br><a href="https://github.com/crawlab-team/crawlab">https://github.com/crawlab-team/crawlab</a></p>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;系统版本：CentOS 7.4 本文的系统命令都是在 root 账号下执行的，假如非 root 账号执行，提示没有权限，可在命令前加 sudo&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;系统版本：CentOS 7.4&lt;/p&gt;
&lt;p&gt;本文的系统命令都是在 root 账号下执行的，假如非 root 账号执行，提示没有权限，可在命令前加&lt;code&gt;sudo&lt;/code&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="linux" scheme="https://hellsakura.github.io/categories/linux/"/>
    
    
    <category term="docker" scheme="https://hellsakura.github.io/tags/docker/"/>
    
    <category term="crawlab" scheme="https://hellsakura.github.io/tags/crawlab/"/>
    
    <category term="python" scheme="https://hellsakura.github.io/tags/python/"/>
    
  </entry>
  
</feed>
